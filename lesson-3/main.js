/* ショートカットキー
ctr + S 保存
ctr + W 今開いているエディターを閉じる
ctr + Z ひとつ前に戻る
ctr + shift + Z ひとつ後に進む
ctr + X 切り取り
ctr + C コピー
ctr + V 貼り付け
ctr + F 検索
ctr + / コメントアウト、コメントイン
ctr + A 全選択
alt + shift + ↓ 下に今選択している行の文字をコピーペースト
alt + ↓　下に今選択している行の文字を移動
ctr + D 選択している単語に対して押した回数だけカーソルが最後の文字の後に出現
ctr + PageDown
ctr + K + ctr + S キーボードショートカット一覧表
*/
// ターミナルを開いたときのショートカットキーもある

// ctr + Space 予測補完

hello();

debugger; //デバッガー文

// F12で開発者ツールを使うとき、Sourceタブを開いてデバッガーツールを使うとき
// 右上のボタンで左の「Step over next function call」のボタンは関数は即座に抜けて次の処理に入る
// 右上のボタンで左の「Step into next function call」のボタンは関数の中に入り、その処理もステップ数として止まる
// 右上のボタンで左の「Step out of current function」のボタンは↑で入ってしまった場合に即座に抜けたいときに使う
// 右上のボタンで左の「Step」のボタンは↑二つができる以前のもの。非同期の時に処理が変わってしまうため、その時に使う
// 右上のボタンで左の「Deactivate breakpoints」のボタンは全ブレークポイントの無効化
// 右上のボタンで左の「Pause Extension」はエラーが起きた時に処理を止めてくれる
// プルダウンメニュー「Scope」ではローカル変数、グローバル変数の値を一覧表示してくれる
// プルダウンメニュー「Watch」では＋を押し、変数名を入力するとその変数の値の変化を監視できる

// VScodeでのデバッグのやり方
// 左にあるファイル、虫眼鏡、Gitの次にある虫みたいなマークを押す
// 「Create launch.json file」を入力
// 「Chrome」を選択（何でもいい）
// .vscodeディレクトリの「launch.json」を開く
// 左上の緑△ボタンを押す

// ブラウザベンダー…ブラウザを作成している人
// ECMAScriptブラウザベンダー向けのjavascriptドキュメント
// MDN…エンジニア向けドキュメント
